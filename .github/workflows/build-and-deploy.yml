on:
  push:
    tags:
      - '*.*.*'

permissions: write-all

jobs:
  build:
    name: Build
    strategy:
      matrix:
        version: [ 'tag', 'latest' ]
        container: [ 'Api', 'App' ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Container Name
        id: container
        run: |
          if [ $CONTAINER_NAME = 'Api' ]; then
            echo "container=resume-api" >> $GITHUB_OUTPUT
          else
            echo "container=resume-app" >> $GITHUB_OUTPUT
          fi

      - name: Set Version
        id: version
        run: |
          if [ $VERSION = 'tag' ]; then
            echo "version=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          else
            echo "version=latest" >> $GITHUB_OUTPUT
          fi

      - name: Split Version Tag
        env:
          VERSION: ${{ github.ref_name }}
        id: split
        run: echo "major=$(echo $VERSION | cut -d. -f1)" >> $GITHUB_OUTPUT

      - name: Replace Version (Api)
        if: ${{ matrix.container == 'Api' }}
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          include: '**/Startup.cs'
          find: 'v1'
          replace: 'v${{ steps.split.outputs.major }}'

      - name: Replace Version (App)
        if: ${{ matrix.container == 'App' }}
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          include: './App/resume-builder/package*.json'
          find: '"version": "0.0.0",'
          replace: '"version": "v${{ github.ref_name }}",'

      - name: Docker Login
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build
        run: docker build -t ghcr.io/barnesdevelopment/${{ steps.container.outputs.name }}:${{ steps.version.outputs.version}} -f ./${{ matrix.container }}.Dockerfile .

      - name: Push
        run: docker push ghcr.io/barnesdevelopment/${{ steps.container.outputs.name }}:${{ steps.version.outputs.version}}

  deploy:
    name: Deploy
    needs: build
    runs-on: [ containerd, self-hosted ]
    steps:
      - uses: actions/checkout@v4

      - name: Move Docker Compose
        run: scp ./production.docker-compose.yml webhost:~/apps/resume-builder/docker-compose.yml

      - name: Docker Compose Up
        run: ssh webhost "cd ~/apps/resume-builder && docker-compose up -d"
